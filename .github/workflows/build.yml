name: "make-modpack"

on:
  push:
    branches:
      - "mainline"
  pull_request:
    branches:
      - "mainline"

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
        with:
          ref: "mainline"
          fetch-depth: 1
      - name: "generate config"
        run: 'echo "twitch_token: ${{ secrets.CURSE_TOKEN }}" > config.yml'
      - name: "build client thing"
        run: "make github_client"
      - name: "build server thing"
        run: "make github_server"
      - name: "set version for artifact upload"
        run: |
          echo ::set-env name=version::$(cat $(pwd)/.version)
          echo ::set-output name=version::$(cat $(pwd)/.version)
      - name: "upload artifact modpack i guess"
        uses: "actions/upload-artifact@v2"
        with:
          name: "ttmb-client-${{env.version}}"
          path: "artifacts/github/client"
      - name: "upload server modpack i guess"
        uses: "actions/upload-artifact@v2"
        with:
          name: "ttmb-server-${{env.version}}"
          path: "artifacts/github/server"
  deploy:
    if: github.ref == 'refs/heads/mainline'
    needs: "build"
    runs-on: ubuntu-latest
    env:
      STICKYPISTON_USER: "${{secrets.STICKYPISTON_USER}}"
      STICKYPISTON_SERVER: "${{secrets.STICKYPISTON_SERVER}}"
      STICKYPISTON_HOST: "${{secrets.STICKYPISTON_HOST}}"
      FTP_PASSWORD: "${{secrets.FTP_PASSWORD}}"
      MULTICRAFT_API_KEY: "${{secrets.MULTICRAFT_API_KEY}}"
      MULTICRAFT_API_HOST: "${{secrets.MULTICRAFT_API_HOST}}"
      RCON_PORT: "${{secrets.RCON_PORT}}"
      RCON_PASSWORD: "${{secrets.RCON_PASSWORD}}"
      CURSEFORGE_TOKEN: "${{secrets.CURSEFORGE_TOKEN}}"
      GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
    steps:
      - uses: "actions/checkout@v2"
        with:
          ref: "mainline"
          fetch-depth: 1
      - name: "fetch server artifact"
        uses: "actions/download-artifact@v2"
        with:
          name: "ttmb-server-${{env.INPUT_version}}"
          path: "server-artifact"
      - name: "recompress server artifact because reasons"
        run: |
          mkdir -p artifacts
          cd server-artifact
          zip -r ../artifacts/ttmb-server-${{env.INPUT_version}}.zip
      - name: "deploy to dev server"
        run: |
          ./scripts/render-devsync.sh
          ./scripts/deploy ${{env.version}}
